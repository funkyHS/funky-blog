(window.webpackJsonp=window.webpackJsonp||[]).push([[84],{395:function(s,t,a){"use strict";a.r(t);var n=a(45),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("p"),a("div",{staticClass:"table-of-contents"},[a("ul",[a("li",[a("a",{attrs:{href:"#_1-查询语句"}},[s._v("1. 查询语句")]),a("ul",[a("li",[a("a",{attrs:{href:"#_1-1-简单的查询语句-dql"}},[s._v("1.1 简单的查询语句（DQL）")])]),a("li",[a("a",{attrs:{href:"#_1-2-条件查询"}},[s._v("1.2 条件查询")])]),a("li",[a("a",{attrs:{href:"#_1-3-排序-升序、降序"}},[s._v("1.3 排序（升序、降序）")])]),a("li",[a("a",{attrs:{href:"#_1-4-分组函数-多行处理函数"}},[s._v("1.4 分组函数（多行处理函数）")])]),a("li",[a("a",{attrs:{href:"#_1-5-单行处理函数"}},[s._v("1.5 单行处理函数")])]),a("li",[a("a",{attrs:{href:"#_1-6-group-by-和-having"}},[s._v("1.6 group by 和 having")])]),a("li",[a("a",{attrs:{href:"#_1-7-查询结果集的去重"}},[s._v("1.7 查询结果集的去重")])]),a("li",[a("a",{attrs:{href:"#_1-8-完整的dql语句的执行次序"}},[s._v("1.8 完整的DQL语句的执行次序")])])])]),a("li",[a("a",{attrs:{href:"#_2-连接查询"}},[s._v("2. 连接查询")]),a("ul",[a("li",[a("a",{attrs:{href:"#_2-1-连接查询-inner-join"}},[s._v("2.1 连接查询 inner join")])]),a("li",[a("a",{attrs:{href:"#_2-2-外连接-left-join-right-join"}},[s._v("2.2 外连接 left join，right join")])]),a("li",[a("a",{attrs:{href:"#_2-3-三张表连接查询"}},[s._v("2.3 三张表连接查询")])])])]),a("li",[a("a",{attrs:{href:"#_3-子查询"}},[s._v("3. 子查询")]),a("ul",[a("li",[a("a",{attrs:{href:"#_3-1-where子句中使用子查询"}},[s._v("3.1 where子句中使用子查询")])]),a("li",[a("a",{attrs:{href:"#_3-2-from后面嵌套子查询"}},[s._v("3.2 from后面嵌套子查询")])]),a("li",[a("a",{attrs:{href:"#_3-3-在select后面嵌套子查询"}},[s._v("3.3 在select后面嵌套子查询")])])])]),a("li",[a("a",{attrs:{href:"#_4-union-可以将查询结果集相加"}},[s._v("4. union (可以将查询结果集相加)")])]),a("li",[a("a",{attrs:{href:"#_5-limit"}},[s._v("5. limit")])]),a("li",[a("a",{attrs:{href:"#参考"}},[s._v("参考")])])])]),a("p"),s._v(" "),a("h2",{attrs:{id:"_1-查询语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-查询语句"}},[s._v("#")]),s._v(" 1. 查询语句")]),s._v(" "),a("h3",{attrs:{id:"_1-1-简单的查询语句-dql"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-简单的查询语句-dql"}},[s._v("#")]),s._v(" 1.1 简单的查询语句（DQL）")]),s._v(" "),a("ul",[a("li",[s._v("语法格式：select 字段名1,字段名2,字段名3,.... from 表名;")]),s._v(" "),a("li",[s._v("提示：任何一条sql语句以“;”结尾。sql语句不区分大小写。")])]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查询员工的年薪:（字段可以参与数学运算。）")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" ename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("sal "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 给查询结果的列重命名")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" ename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("sal "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" yearsal "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 别名中有中文")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 错误写法: select ename,sal * 12 as 年薪 from emp;")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" ename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("sal "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'年薪'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# as关键字可以省略")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" empno"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("ename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("sal "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v(" yearsal "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查询所有字段")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 实际开发中不建议使用*，效率较低。")]),s._v("\n")])])]),a("h3",{attrs:{id:"_1-2-条件查询"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-条件查询"}},[s._v("#")]),s._v(" 1.2 条件查询")]),s._v(" "),a("ul",[a("li",[s._v("语法格式：select  字段,字段... from 表名  where 条件;")])]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查询工资等于5000的员工姓名：")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" ename "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" sal "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查询SMITH的工资：(字符串使用单引号括起来)")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" sal "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" ename "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'SMITH'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 找出工资高于等于3000的员工：")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" ename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("sal "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" sal "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 找出工资不等于3000的：")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" ename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("sal "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" sal "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<>")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" ename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("sal "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" sal "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 找出工资在1100和3000之间的员工，包括1100和3000")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" ename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("sal "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" sal "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1100")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("and")]),s._v(" sal "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# between...and...是闭区间 [1100 ~ 3000]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" ename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("sal "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" sal "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("between")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1100")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("and")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查询不到任何数据")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" ename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("sal "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" sal "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("between")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("and")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# between and在使用的时候必须左小右大。between and除了可以使用在数字方面之外，还可以使用在字符串方面。")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" ename "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" ename "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("between")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'A'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("and")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'C'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 用在字符上面是 左闭右开。")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" ename "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" ename "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("between")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'A'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("and")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'D'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 找出哪些人津贴为NULL：")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在数据库当中NULL不是一个值，代表什么也没有，为空。不能用等号衡量。必须使用 `is null`或者`is not null`")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" ename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("sal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("comm "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" comm "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("is")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 找出哪些人津贴不为NULL：")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" ename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("sal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("comm "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" comm "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("is")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("not")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 找出哪些人没有津贴：")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" ename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("sal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("comm "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" comm "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("is")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("null")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("or")]),s._v(" comm "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 找出工作岗位是MANAGER和SALESMAN的员工：")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" ename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("job "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" job "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'MANAGER'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("or")]),s._v(" job "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'SALESMAN'")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# and和or联合起来用：找出薪资大于1000的并且部门编号是20或30部门的员工")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 注意：当运算符的优先级不确定的时候加小括号。")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 错误写法: select ename,sal,deptno from emp where sal > 1000 and deptno = 20 or deptno = 30; ")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" ename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("sal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("deptno "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" sal "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("and")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("deptno "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("or")]),s._v(" deptno "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("30")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# in等同于or：找出工作岗位是MANAGER和SALESMAN的员工")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" ename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("job "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" job "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'SALESMAN'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("or")]),s._v(" job "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'MANAGER'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" ename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("job "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" job "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("in")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'SALESMAN'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'MANAGER'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" ename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("job "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" sal "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("in")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("800")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# in后面的值不是区间，是具体的值。")]),s._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 模糊查询like：在模糊查询当中，必须掌握两个特殊的符号，一个是 %，一个是 _ ")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# % 代表任意多个字符，_ 代表任意1个字符")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 找出名字当中含有O的：")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" ename "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" ename "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("like")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%O%'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 找出名字中第二个字母是A的：")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" ename "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" ename "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("like")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'_A%'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 找出名字中有下划线的：")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" name "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" t_user "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" name "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("like")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%\\_%'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 找出名字中最后一个字母是T的：")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" ename "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" ename "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("like")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%T'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("h3",{attrs:{id:"_1-3-排序-升序、降序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-排序-升序、降序"}},[s._v("#")]),s._v(" 1.3 排序（升序、降序）")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 按照工资升序，找出员工名和薪资。默认是升序。asc表示升序，desc表示降序。")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" ename "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" sal "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("order")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" sal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 升序")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" ename "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" sal "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("order")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" sal "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("asc")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 升序")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" ename "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" sal "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("order")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" sal "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("desc")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 降序")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 按照工资的降序排列，当工资相同的时候再按照名字的升序排列")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 注意：越靠前的字段越能起到主导作用。只有当前面的字段无法完成排序的时候，才会启用后面的字段。")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" ename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("sal "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("order")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" sal "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("desc")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" ename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("sal "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("order")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" sal "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("desc")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" ename "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("asc")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 找出工作岗位是SALESMAN的员工，并且要求按照薪资的降序排列")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" ename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("job"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("sal "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" job "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'SALESMAN'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("order")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" sal "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("desc")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("h3",{attrs:{id:"_1-4-分组函数-多行处理函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-分组函数-多行处理函数"}},[s._v("#")]),s._v(" 1.4 分组函数（多行处理函数）")]),s._v(" "),a("ul",[a("li",[s._v("分组函数一共5个。count 计数、sum 求和、avg 平均值、max 最大值、min 最小值")]),s._v(" "),a("li",[s._v("记住：所有的分组函数都是对“某一组”数据进行操作的。")])]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 找出工资总和/最高工资/最低工资/平均工资：")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sum")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("max")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("min")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("avg")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 找出总人数：")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# count(*)和count(具体的某个字段) 区别")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# count(*):不是统计某个字段中数据的个数，而是统计总记录条数。（和某个字段无关）")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# count(comm): 表示统计comm字段中不为NULL的数据总数量。")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("count")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("count")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 分组函数自动忽略NULL：")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("count")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("comm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sum")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("comm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" comm "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("is")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("not")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 不需要额外添加这个过滤条件。sum函数自动忽略NULL。")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 找出工资高于平均工资的员工")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("avg")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 平均工资")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" ename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("sal "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" sal "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("avg")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ERROR 1111 (HY000): Invalid use of group function")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 上面错误原因：SQL语句当中有一个语法规则，分组函数不可直接使用在where子句当中。因为 group by是在where执行之后才会执行的。")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 第一步：找出平均工资  ")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("avg")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 第二步：找出高于平均工资的员工  ")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" ename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("sal "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" sal "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2073.214286")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" ename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("sal "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" sal "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("avg")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 分组函数也能组合起来用：")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("count")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sum")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("avg")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("max")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("min")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("img",{attrs:{src:"http://funky_hs.gitee.io/imgcloud/funkyblog/database/mysql/2/7.png",width:"500"}}),s._v(" "),a("h3",{attrs:{id:"_1-5-单行处理函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-单行处理函数"}},[s._v("#")]),s._v(" 1.5 单行处理函数")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 计算每个员工的年薪")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" ename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sal"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("comm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" yearsal "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 重点：【 所有数据库都是这样规定的，只要有NULL参与的运算结果一定是NULL 】")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 使用ifnull函数：")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" ename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sal"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("ifnull"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("comm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" yearsal "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ifnull() 空处理函数：ifnull(可能为NULL的数据,被当做什么处理)，属于单行处理函数。")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" ename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("ifnull"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("comm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" comm "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("img",{attrs:{src:"http://funky_hs.gitee.io/imgcloud/funkyblog/database/mysql/2/8.png",width:"500"}}),s._v(" "),a("h3",{attrs:{id:"_1-6-group-by-和-having"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-6-group-by-和-having"}},[s._v("#")]),s._v(" 1.6 group by 和 having")]),s._v(" "),a("ul",[a("li",[a("strong",[s._v("group by")]),s._v(" : 按照某个字段或者某些字段进行分组。")]),s._v(" "),a("li",[a("strong",[s._v("having")]),s._v(" : having是对分组之后的数据进行再次过滤。")]),s._v(" "),a("li",[s._v("注意：分组函数一般都会和group by联合使用，这也是为什么它被称为分组函数的原因。")]),s._v(" "),a("li",[s._v("并且任何一个分组函数（count sum avg max min）都是在group by语句执行结束之后才会执行的。")])]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 找出每个工作岗位的最高薪资：")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("max")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("job "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("group")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" job"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 语法错误")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" ename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("max")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("job "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("group")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" job"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 记住一个规则：当一条语句中有group by的话，select后面只能跟分组函数和参与分组的字段。")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 每个工作岗位的平均薪资: ")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" job"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("avg")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("group")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" job"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 找出每个部门不同工作岗位的最高薪资: ")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" deptno"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("job"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("max")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("group")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" deptno"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("job"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 找出每个部门的最高薪资，要求显示薪资大于2900的数据。")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 第一步：找出每个部门的最高薪资：")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("max")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("deptno "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("group")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" deptno"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 第二步：找出薪资大于2900： ")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("max")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("deptno "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("group")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" deptno "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("having")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("max")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2900")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 这种方式效率低。")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("max")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("deptno "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" sal "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2900")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("group")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" deptno"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 效率较高，建议能够使用where过滤的尽量使用where。")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 找出每个部门的平均薪资，要求显示薪资大于2000的数据")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 第一步：找出每个部门的平均薪资：")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" deptno"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("avg")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("group")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" deptno"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 第二步：要求显示薪资大于2000的数据：")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" deptno"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("avg")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("group")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" deptno "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("having")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("avg")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# where后面不能使用分组函数：")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" deptno"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("avg")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("avg")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("group")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" deptno"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 错误了。这种情况只能使用having过滤。")]),s._v("\n")])])]),a("h3",{attrs:{id:"_1-7-查询结果集的去重"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-7-查询结果集的去重"}},[s._v("#")]),s._v(" 1.7 查询结果集的去重")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# distinct关键字去除重复记录。")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 记住：distinct只能出现在所有字段的最前面。")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("distinct")]),s._v(" job "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 错误写法：select ename,distinct job from emp;")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 联合去重：")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("distinct")]),s._v(" deptno"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("job "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 统计岗位的数量：")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("count")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("distinct")]),s._v(" job"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("h3",{attrs:{id:"_1-8-完整的dql语句的执行次序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-8-完整的dql语句的执行次序"}},[s._v("#")]),s._v(" 1.8 完整的DQL语句的执行次序")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v("        "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v("          "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("    \n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v("         "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("group")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v("      "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("having")]),s._v("        "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("order")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v("      "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n")])])]),a("hr"),s._v(" "),a("h2",{attrs:{id:"_2-连接查询"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-连接查询"}},[s._v("#")]),s._v(" 2. 连接查询")]),s._v(" "),a("h3",{attrs:{id:"_2-1-连接查询-inner-join"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-连接查询-inner-join"}},[s._v("#")]),s._v(" 2.1 连接查询 inner join")]),s._v(" "),a("ul",[a("li",[s._v("在实际开发中，大部分的情况下都不是从单表中查询数据，一般都是多张表联合查询取出最终的结果。")]),s._v(" "),a("li",[s._v("在实际开发中，一般一个业务都会对应多张表，比如：学生和班级，起码两张表。")]),s._v(" "),a("li",[s._v("表的别名："),a("code",[s._v("select e.ename,d.dname from emp e,dept d;")])]),s._v(" "),a("li",[s._v("表的别名好处：第一：执行效率高，第二：可读性好。")])]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查询每个员工的部门名称，要求显示员工名和部门名")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# SQL92:（太老，不用了）")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("ename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("dname "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" dept d "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("deptno "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("deptno"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# SQL99：（常用的）")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("ename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("dname "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp e "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("join")]),s._v(" dept d "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("on")]),s._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("deptno "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("deptno"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# inner可以省略的，带着inner目的是可读性好一些：")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("ename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("dname "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp e "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("inner")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("join")]),s._v(" dept d "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("on")]),s._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("deptno "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("deptno"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# SQL99语法结构更清晰一些：表的连接条件和后来的where条件分离了。")]),s._v("\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 找出每个员工的工资等级，要求显示员工名、工资、工资等级")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("ename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("sal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("grade "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp e "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("inner")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("join")]),s._v(" salgrade s "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("on")]),s._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("sal "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("between")]),s._v(" s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("losal "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("and")]),s._v(" s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("hisal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# inner可以省略")]),s._v("\n    \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 找出每个员工的上级领导，要求显示员工名和对应的领导名 ")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("ename "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'员工名'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("ename "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'领导名'")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v("  emp a  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("inner")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("join")]),s._v(" emp b "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("on")]),s._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("mgr "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("empno"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("h3",{attrs:{id:"_2-2-外连接-left-join-right-join"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-外连接-left-join-right-join"}},[s._v("#")]),s._v(" 2.2 外连接 left join，right join")]),s._v(" "),a("ul",[a("li",[a("strong",[s._v("什么是外连接，和内连接有什么区别")]),s._v(" "),a("ul",[a("li",[a("strong",[s._v("内连接")]),s._v("：假设A和B表进行连接，使用内连接的话，凡是A表和B表能够匹配上的记录查询出来，这就是内连接。AB两张表没有主副之分，两张表是平等的。")]),s._v(" "),a("li",[a("strong",[s._v("外连接")]),s._v("：假设A和B表进行连接，使用外连接的话，AB两张表中有一张表是主表，一张表是副表，主要查询主表中的数据，捎带着查询副表，当副表中的数据没有和主表中的数据匹配上，副表自动模拟出NULL与之匹配。")]),s._v(" "),a("li",[s._v("外连接的分类：左外连接（左连接）：表示左边的这张表是主表。右外连接（右连接）：表示右边的这张表是主表。")]),s._v(" "),a("li",[s._v("左连接有右连接的写法，右连接也会有对应的左连接的写法。")])])])]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 找出每个员工的上级领导？（所有员工必须全部查询出来。）")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 内连接：")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("ename "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'员工名'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("ename "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'领导名'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp a "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("inner")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("join")]),s._v(" emp b "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("on")]),s._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("mgr "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("empno"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 外连接：（左外连接/左连接，表示左边是主表）：")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("ename "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'员工'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("ename "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'领导'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp a "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("left")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("join")]),s._v(" emp b "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("on")]),s._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("mgr "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("empno"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 外连接：（右外连接/右连接，表示右边是主表）：")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("ename "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'员工'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("ename "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'领导'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp b "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("right")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("join")]),s._v(" emp a "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("on")]),s._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("mgr "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("empno"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 外连接最重要的特点是：主表的数据无条件的全部查询出来。副表没有与之匹配的，就以NULL匹配")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 找出哪个部门没有员工：")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp e "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("right")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("join")]),s._v(" dept d "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("on")]),s._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("deptno "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("deptno "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("empno "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("is")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("h3",{attrs:{id:"_2-3-三张表连接查询"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-三张表连接查询"}},[s._v("#")]),s._v(" 2.3 三张表连接查询")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 找出每一个员工的部门名称以及工资等级：")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("ename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("dname"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("grade \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp e "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("join")]),s._v(" dept d "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("on")]),s._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("deptno "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("deptno \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("join")]),s._v(" salgrade s "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("on")]),s._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("sal "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("between")]),s._v(" s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("losal "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("and")]),s._v(" s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("hisal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 找出每一个员工的部门名称、工资等级、以及上级领导")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" \n    e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("ename "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'员工'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("dname"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("grade"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("e1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("ename "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'领导'")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" \n    emp e \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("join")]),s._v(" \n    dept d \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("on")]),s._v(" \n    e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("deptno "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("deptno \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("join")]),s._v(" \n    salgrade s \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("on")]),s._v(" \n    e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("sal \n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("between")]),s._v(" \n    s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("losal \n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("and")]),s._v(" \n    s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("hisal \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("left")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("join")]),s._v(" \n    emp e1 \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("on")]),s._v(" \n    e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("mgr "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" e1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("empno"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("hr"),s._v(" "),a("h2",{attrs:{id:"_3-子查询"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-子查询"}},[s._v("#")]),s._v(" 3. 子查询")]),s._v(" "),a("ul",[a("li",[s._v("select语句当中嵌套select语句，被嵌套的select语句是子查询。")])]),s._v(" "),a("h3",{attrs:{id:"_3-1-where子句中使用子查询"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-where子句中使用子查询"}},[s._v("#")]),s._v(" 3.1 where子句中使用子查询")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 找出高于平均薪资的员工信息")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" sal "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("avg")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 错误的写法，where后面不能直接使用分组函数。")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" sal "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("avg")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("h3",{attrs:{id:"_3-2-from后面嵌套子查询"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-from后面嵌套子查询"}},[s._v("#")]),s._v(" 3.2 from后面嵌套子查询")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 找出每个部门平均薪水的等级")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 第一步：找出每个部门平均薪水（按照部门编号分组，求sal的平均值）：")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" deptno"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("avg")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" avgsal "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("group")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" deptno"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 第二步：将以上的查询结果当做临时表t，让t表和salgrade s表连接，条件是：t.avgsal between s.losal and s.hisal")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("grade "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" deptno"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("avg")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" avgsal "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("group")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" deptno"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" t "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("join")]),s._v(" salgrade s "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("on")]),s._v(" t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("avgsal "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("between")]),s._v(" s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("losal "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("and")]),s._v(" s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("hisal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("h3",{attrs:{id:"_3-3-在select后面嵌套子查询"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-在select后面嵌套子查询"}},[s._v("#")]),s._v(" 3.3 在select后面嵌套子查询")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 找出每个员工所在的部门名称，要求显示员工名和部门名")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("ename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("dname "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp e "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("join")]),s._v(" dept d "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("on")]),s._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("deptno "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("deptno"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("ename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("dname "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" dept d "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("deptno "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("deptno"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" dname "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("hr"),s._v(" "),a("h2",{attrs:{id:"_4-union-可以将查询结果集相加"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-union-可以将查询结果集相加"}},[s._v("#")]),s._v(" 4. union (可以将查询结果集相加)")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 找出工作岗位是SALESMAN和MANAGER的员工")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 第一种：")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" ename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("job "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" job "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'MANAGER'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("or")]),s._v(" job "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'SALESMAN'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 第二种：")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" ename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("job "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" job "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("in")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'MANAGER'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'SALESMAN'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 第三种：")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" ename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("job "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" job "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'MANAGER'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("union")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" ename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("job "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" job "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'SALESMAN'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# union可以将两张不相干的表中的数据拼接在一起显示")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" ename "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("union")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" dname "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" dept"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" ename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("sal "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("union")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" dname "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" dept"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 错误的写法")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ERROR 1222 (21000): The used SELECT statements have a different number of columns")]),s._v("\n")])])]),a("hr"),s._v(" "),a("h2",{attrs:{id:"_5-limit"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-limit"}},[s._v("#")]),s._v(" 5. limit")]),s._v(" "),a("ul",[a("li",[s._v("limit是mysql特有的，其他数据库中没有，不通用。（Oracle中有一个相同的机制，叫做rownum）")]),s._v(" "),a("li",[s._v("语法机制："),a("code",[s._v("limit startIndex, length")]),s._v("   startIndex表示起始位置，从0开始，0表示第一条数据。length表示取几个")])]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 取出工资前5名的员工")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" ename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("sal "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("order")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" sal "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("desc")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("limit")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" ename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("sal "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("order")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" sal "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("desc")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("limit")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 找出工资排名在第4到第9名的员工:  ")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" ename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("sal "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("order")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" sal "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("desc")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("limit")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("ul",[a("li",[s._v("limit是sql语句最后执行的一个环节：")])]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v("        "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v("          "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("        \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v("         "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("    \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("group")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v("      "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("having")]),s._v("        "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("order")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v("      "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("limit")]),s._v("         "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("ul",[a("li",[s._v("通用的标准分页sql：\n"),a("ul",[a("li",[s._v("每页显示pageSize条记录，第pageNo页："),a("code",[s._v("(pageNo - 1) * pageSize, pageSize")])])])])]),s._v(" "),a("hr"),s._v(" "),a("h2",{attrs:{id:"参考"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[s._v("#")]),s._v(" 参考")]),s._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://www.bilibili.com/video/av57575364",target:"_blank",rel:"noopener noreferrer"}},[s._v("MySQL基础入门-mysql教程-数据库实战"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);t.default=e.exports}}]);