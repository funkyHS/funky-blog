(window.webpackJsonp=window.webpackJsonp||[]).push([[90],{456:function(n,t,s){"use strict";s.r(t);var e=s(45),a=Object(e.a)({},(function(){var n=this,t=n.$createElement,s=n._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[s("p"),s("div",{staticClass:"table-of-contents"},[s("ul",[s("li",[s("a",{attrs:{href:"#_1-安装nginx"}},[n._v("1. 安装Nginx")])]),s("li",[s("a",{attrs:{href:"#_2-常用命令"}},[n._v("2. 常用命令")])]),s("li",[s("a",{attrs:{href:"#_3-nginx的配置文件"}},[n._v("3. Nginx的配置文件")]),s("ul",[s("li",[s("a",{attrs:{href:"#_3-1-mac系统中nginx的配置"}},[n._v("3.1 Mac系统中Nginx的配置")])]),s("li",[s("a",{attrs:{href:"#_3-2-配置文件"}},[n._v("3.2 配置文件")])]),s("li",[s("a",{attrs:{href:"#_3-3-nginx-conf"}},[n._v("3.3 nginx.conf")])])])]),s("li",[s("a",{attrs:{href:"#参考"}},[n._v("参考")])])])]),s("p"),n._v(" "),s("hr"),n._v(" "),s("h2",{attrs:{id:"_1-安装nginx"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-安装nginx"}},[n._v("#")]),n._v(" 1. 安装Nginx")]),n._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"http://nginx.org/en/download.html",target:"_blank",rel:"noopener noreferrer"}},[n._v("下载Nginx nginx.org"),s("OutboundLink")],1)]),n._v(" "),s("li",[n._v("我这里使用的是阿里云ECS Ubuntu 18.04")]),n._v(" "),s("li",[n._v("查看是否有nginx：apt show nginx")]),n._v(" "),s("li",[n._v("查看nginx版本：nginx -v")]),n._v(" "),s("li",[n._v("更新apt：apt update")]),n._v(" "),s("li",[n._v("使用apt安装nginx：apt install nginx -y (-y 表示不需要手动确认)\n"),s("ul",[s("li",[n._v("在Ubuntu下使用 apt，在CenterOS下使用yum，在MacOS下使用 homebrew")])])]),n._v(" "),s("li",[n._v("安装完成以后，域名就可以直接访问了,如果没有显示，去阿里云安全组，开启80端口")]),n._v(" "),s("li",[n._v("在安装完成之后 nginx 的安装文件路径：\n"),s("ul",[s("li",[s("code",[n._v("/usr/sbin/nginx")]),n._v("：主程序")]),n._v(" "),s("li",[s("code",[n._v("/etc/nginx")]),n._v("：存放配置文件")]),n._v(" "),s("li",[s("code",[n._v("/usr/share/nginx")]),n._v("：存放静态文件")]),n._v(" "),s("li",[s("code",[n._v("/var/log/nginx")]),n._v("：存放日志")]),n._v(" "),s("li",[n._v("通过对 "),s("code",[n._v("/etc/nginx/nginx.conf")]),n._v(" 文件进行修改来配置 nginx")])])])]),n._v(" "),s("hr"),n._v(" "),s("h2",{attrs:{id:"_2-常用命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-常用命令"}},[n._v("#")]),n._v(" 2. 常用命令")]),n._v(" "),s("ul",[s("li",[n._v("查看nginx版本：nginx -v")]),n._v(" "),s("li",[n._v("启动 nginx：service nginx start 或者 cd /usr/sbin & ./nginx")]),n._v(" "),s("li",[n._v("关闭 nginx：service nginx stop 或者 nginx -s stop")]),n._v(" "),s("li",[n._v("重启 nginx：service nginx restart 或者 nginx -s reload（对配置文件重新加载，不需要重启服务器）")]),n._v(" "),s("li",[n._v("查看nginx正在运行的进程：ps -ef |grep nginx")])]),n._v(" "),s("hr"),n._v(" "),s("h2",{attrs:{id:"_3-nginx的配置文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-nginx的配置文件"}},[n._v("#")]),n._v(" 3. Nginx的配置文件")]),n._v(" "),s("ul",[s("li",[n._v("Ubuntu下配置文件位置："),s("code",[n._v("/etc/nginx/nginx.conf")]),n._v(" "),s("br"),s("img",{attrs:{src:"http://funky_hs.gitee.io/imgcloud/funkyblog/nginx/5.png",width:"600"}})]),n._v(" "),s("li",[n._v("我这里是最新版本nginx配置，后面在补充")]),n._v(" "),s("li",[n._v("下面主要介绍老版本的配置，老版本的配置主要是在"),s("code",[n._v("nginx.conf")]),n._v("中")])]),n._v(" "),s("h3",{attrs:{id:"_3-1-mac系统中nginx的配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-mac系统中nginx的配置"}},[n._v("#")]),n._v(" 3.1 Mac系统中Nginx的配置")]),n._v(" "),s("ul",[s("li",[n._v("在mac中使用"),s("code",[n._v("nginx -t")]),n._v("命令，可以查看到配置文件的位置，我这里的位置是在："),s("code",[n._v("/usr/local/etc/nginx/nginx.conf")])]),n._v(" "),s("li",[n._v("nginx在mac上日志路径：/usr/local/var/log/nginx/access.log")]),n._v(" "),s("li",[n._v("查看nginx是否启动：ps -ef | grep nginx")]),n._v(" "),s("li",[n._v("启动：sudo brew services start nginx")]),n._v(" "),s("li",[n._v("暂停：nginx -s stop")]),n._v(" "),s("li",[n._v("重载：nginx -s reload")]),n._v(" "),s("li",[n._v("对mac中安装的nginx配置文件进行说明，从配置文件可以看出，我这里的nginx监听的是8181端口，在浏览器中可以直接访问"),s("a",{attrs:{href:"http://localhost:8181/",target:"_blank",rel:"noopener noreferrer"}},[n._v("http://localhost:8181/"),s("OutboundLink")],1),n._v(",可以看到nginx的html页面")]),n._v(" "),s("li",[n._v("注意：\n"),s("ul",[s("li",[n._v("mac的"),s("code",[n._v("nginx.conf")]),n._v("中 看到根路径"),s("code",[n._v("root html")]),n._v("，这里html指向的相对路径是在编译时设置的，可以使用命令 "),s("code",[n._v("nginx -V")]),n._v(" 检查路径")]),n._v(" "),s("li",[n._v("可以看到："),s("code",[n._v("--prefix=/usr/local/Cellar/nginx/1.19.9")]),n._v("，这是nginx文件的文件夹")]),n._v(" "),s("li",[n._v("cd到nginx文件夹，可以看到html文件夹是"),s("code",[n._v("/usr/local/var/www")]),n._v(" 文件夹的软连接\n"),s("br"),s("img",{attrs:{src:"http://funky_hs.gitee.io/imgcloud/funkyblog/nginx/11.png",width:"600"}})])])])]),n._v(" "),s("h3",{attrs:{id:"_3-2-配置文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-配置文件"}},[n._v("#")]),n._v(" 3.2 配置文件")]),n._v(" "),s("ul",[s("li",[n._v("nginx.conf配置文件分为三部分")])]),n._v(" "),s("h4",{attrs:{id:"_1-第一部分-全局块"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-第一部分-全局块"}},[n._v("#")]),n._v(" 1）第一部分：全局块")]),n._v(" "),s("ul",[s("li",[n._v("从配置文件开始到 events 块之间的内容")]),n._v(" "),s("li",[n._v("主要会设置一些影响 Nginx 服务器整体运行的配置指令")]),n._v(" "),s("li",[n._v("主要包括配置运行Nginx服务器的用户（组）、允许生成的worker_processes数、进程PID存放路径、日志存放路径和类型以及配置文件的引入等")])]),n._v(" "),s("h4",{attrs:{id:"_2-第二部分-events块"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-第二部分-events块"}},[n._v("#")]),n._v(" 2）第二部分：events块")]),n._v(" "),s("ul",[s("li",[n._v("events 块涉及的指令主要影响 Nginx 服务器与用户的网络连接")]),n._v(" "),s("li",[n._v("常用的设置包括是否开启对多work process下的网络连接进行序列化")]),n._v(" "),s("li",[n._v("是否允许同时接收多个网络连接，选取哪种事件驱动模型来处理连接请求")]),n._v(" "),s("li",[n._v("每个 work process 可以同时支持的最大连接数等")])]),n._v(" "),s("h4",{attrs:{id:"_3-第三部分-http块"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-第三部分-http块"}},[n._v("#")]),n._v(" 3）第三部分：http块")]),n._v(" "),s("ul",[s("li",[n._v("这是配置中最频繁的部分")]),n._v(" "),s("li",[n._v("代理，缓存和日志定义等绝大多数功能和第三方模块的配置都在这里")]),n._v(" "),s("li",[n._v("http块包括：http全局块、server块")]),n._v(" "),s("li",[n._v("http全局块：\n"),s("ul",[s("li",[n._v("文件引入、MIME-TYPE定义、日志自定义、连接超时时间、单链接请求数上限等")])])]),n._v(" "),s("li",[n._v("server块：\n"),s("ul",[s("li",[n._v("这块和虚拟主机有密切关系，虚拟主机从用户角度看，和单一独立的硬件主机是完全一样的，该技术的产生是为了节省互联网服务器硬件成本。")]),n._v(" "),s("li",[n._v("每个 http 块可以包括多个 server 块，而每个 server 块就相当于一个虚拟主机")]),n._v(" "),s("li",[n._v("每个server块也分为：全局server块、多个locaton块")]),n._v(" "),s("li",[s("code",[n._v("全局server块")]),n._v("：最常见的配置是本虚拟机主机的监听配置和本虚拟主机的名称或 IP 配置")]),n._v(" "),s("li",[s("code",[n._v("location块")]),n._v("：一个server块可以配置多个location块。这块的主要作用是基于Nginx服务器接收到的请求字符串（例如 server_name/uri-string），对虚拟主机名称（也可以是 IP 别名）之外的字符串（例如 前面的 /uri-string）进行匹配，对特定的请求进行处理。地址定向、数据缓存和应答控制等功能，还有许多第三方模块的配置也在这里进行。")])])])]),n._v(" "),s("h3",{attrs:{id:"_3-3-nginx-conf"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-nginx-conf"}},[n._v("#")]),n._v(" 3.3 nginx.conf")]),n._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# -------------【 1. 全局块 】--------------")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# Nginx服务器并发处理服务的关键配置")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# worker_processes值越大，可以支持的并发处理量也越多，但是会受到硬件、软件等设备的制约")]),n._v("\nworker_processes  "),s("span",{pre:!0,attrs:{class:"token number"}},[n._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v(" \n\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# ------------【 2. events块 】------------")]),n._v("\nevents "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# 表示每个 work process 支持的最大连接数为 1024.")]),n._v("\n    worker_connections  "),s("span",{pre:!0,attrs:{class:"token number"}},[n._v("1024")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# ------------【 3. http块 】------------")]),n._v("\nhttp "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# ------------【 3.1. http全局块 】------------")]),n._v("\n    include       mime.types"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n    default_type  application/octet-stream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n    sendfile        on"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n    keepalive_timeout  "),s("span",{pre:!0,attrs:{class:"token number"}},[n._v("65")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# ------------【 3.2. server块 】------------")]),n._v("\n    server "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n        listen       "),s("span",{pre:!0,attrs:{class:"token number"}},[n._v("8181")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# 目前监听的端口号是 8181")]),n._v("\n        server_name  localhost"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# 主机名称")]),n._v("\n        location / "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n            root   html"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n            index  index.html index.htm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n        error_page   "),s("span",{pre:!0,attrs:{class:"token number"}},[n._v("500")]),n._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[n._v("502")]),n._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[n._v("503")]),n._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[n._v("504")]),n._v("  /50x.html"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n        location "),s("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),n._v(" /50x.html "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n            root   html"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("        \n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n    include servers/*"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n")])])]),s("h2",{attrs:{id:"参考"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[n._v("#")]),n._v(" 参考")]),n._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://www.bilibili.com/video/BV1zJ411w7SV",target:"_blank",rel:"noopener noreferrer"}},[n._v("Nginx教程由浅入深"),s("OutboundLink")],1)]),n._v(" "),s("li",[s("a",{attrs:{href:"https://www.jianshu.com/p/630e2e1ca57f",target:"_blank",rel:"noopener noreferrer"}},[n._v("Nginx从听说到学会"),s("OutboundLink")],1)])])])}),[],!1,null,null,null);t.default=a.exports}}]);